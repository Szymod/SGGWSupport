@using SGGWSupportWeb.Models
@model SGGWSupportWeb.Models.TicketViewModel

@{
    ViewBag.Title = "Nowe zgłoszenie";
}

<h2><i>Nowe zgłoszenie</i></h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control ticket-input", @placeholder = "Tytuł..." } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
            </div>
       

            <div class="col-xs-4 text-center">
                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownListFor(model => model.Status.Id, ViewData["states"] as List<SelectListItem>, "Wybierz status", htmlAttributes: new { @class = "form-control ticket-input" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-xs-4 text-center">
                <div class="form-group">
                    @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("Priority.Id", ViewData["priorities"] as List<SelectListItem>, "Wybierz priorytet", htmlAttributes: new { @class = "form-control ticket-input" })
                        @*@Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control ticket-input" } })*@
                        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-xs-4 text-center">
                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("Category.Id", ViewData["categories"] as List<SelectListItem>, "Wybierz kategorię", htmlAttributes: new { @class = "form-control ticket-input" })
                        @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control ticket-input" } })*@
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

      
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.TextAreaFor(model => model.Description, new { @rows = 5, @class = "form-control ticket-textarea" } )
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
       


        <div class="form-group">
            <div class="col-md-offset-10">
                @Html.ActionLink("Powrót", "Index", "Home", null, new { @class = "btn btn-default" })
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </div>
        </div>
}

