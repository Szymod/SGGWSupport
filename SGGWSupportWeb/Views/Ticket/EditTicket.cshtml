@using SGGWSupportWeb.Models
@model SGGWSupportWeb.Models.TicketViewModel

@{
    ViewBag.Title = "Edycja zgłoszenia";
}

<h2><i>Zgłoszenie nr 1001</i></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control ticket-input", @placeholder = "Tytuł..." } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-xs-4 text-center">
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetNames(typeof(TicketStatus))), "Wybierz", new { @class = "form-control ticket-input" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-xs-4 text-center">
            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Priority, new { htmlAttributes = new { @class = "form-control ticket-input" } })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-xs-4 text-center">
            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control ticket-input" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Description, new { @rows = 5, @class = "form-control ticket-textarea" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="panel panel-success">
            <div class="panel-heading">
                <b>Komentarze</b>
            </div>
                <div class="panel-body">
                    <div style="border-radius:2px;">
                    <table style="width:100%;">
                        <tr>
                           <td style="border:1px solid #cccccc">Przykładowy komentarz</td> 
                        </tr>
                    </table></div>
                    <br /><br />
                    <div>
                    @Html.Editor("comment", new { htmlAttributes = new { @id = "comment", @class = "form-control ticket-comment-input comment-input" } })
                    <button class="btn btn-success" onclick="addComment(); return false;">Dodaj komentarz</button>
                    </div>
                </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-10">
                @Html.ActionLink("Powrót", "Index", "Home", null, new { @class = "btn btn-default" })
                <input type="submit" value="Zapisz" class="btn btn-primary" />
            </div>
        </div>
    </div>


    
}

@section scripts {

    <script type="text/javascript">
        function addComment() {
            var newComment = document.getElementById('comment').value;

            var table = document.getElementsByTagName('table')[0];
            var newRow = table.insertRow(1);
            var col1 = newRow.insertCell(0);

            col1.innerHTML = newComment;

            newRow.style.border = "1px solid";
            col1.style.borderRadius = "4px";

        };
    </script>

}
